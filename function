'''
A fun lambda function to re-write urls based on a mapping table or DynamoDB.

'''
from __future__ import print_function

import boto3
import requests
from botocore.exceptions import ClientError
from datetime import date,time,datetime
#import os
#import hashlib
#import base64
#import time
#import hmac
#import json
#from base64 import b64decode

print('Loading function')

#set variables and play with context shift (https and http) maybe use dict or list (?)
http://www.dealmagnify.com/peace = http://www.google.com
https://www.dealmagnify.com/peaceout = http:///www.microsoft.com
http://www.dealmangnify.com/peacebro = https://www.microsoft.com
https://www.dealmagnify.com/peacedawg = https://www.google.com 

def requestURI(event, context, callback):

def lambdaRewrite(requestedURI):  #main function uses requestURL detection 
    
    #dict: 

try:  
    #your really good code

    return {
        "statusCode": 302,
        "headers": {
            "Location": "https://example.com/#success"
        }
    }
except:  
    return {
        "statusCode": 302,
        "headers": {
            "Location": "https://example.com/#error"
        }
    }

